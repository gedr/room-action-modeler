package ru.intech.ussd.modeler.entities;
// Generated 07.08.2015 14:31:53 by Hibernate Tools 3.4.0.CR1

import java.util.Objects;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * EntryPoints generated by hbm2java
 */
@Entity
@Table(schema = "graph", name = "entry_points")
public class EntryPoint implements java.io.Serializable {
	// =================================================================================================================
	// Constants
	// =================================================================================================================
	private static final long serialVersionUID = -4500929991588247018L;

	// =================================================================================================================
	// Fields
	// =================================================================================================================
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq")
	@SequenceGenerator(name = "seq", sequenceName = "graph.entry_points_id_seq", allocationSize = 1)
	@Column(name = "id")
	private Integer id;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "room_id", nullable = false)
	private Room room;

	@Column(name = "prefix", nullable = false)
	private String service;

	@Column(name = "dscr", nullable = false)
	private String description;

	@Column(name = "msg")
	private String userMessage;

	@Column(name = "active")
	private boolean active;

	@Transient
	private Integer hash;

	@Transient
	private UUID uuid = UUID.randomUUID();

	// =================================================================================================================
	// Constructors
	// =================================================================================================================
	public EntryPoint() {
	}

	public EntryPoint(EntryPoint other) {
		if (other != null) {
			this.setActive(other.isActive());
			this.setUserMessage(other.getUserMessage());
			this.setDescription(other.getDescription());
			this.setService(other.getService());
			this.setRoom(other.getRoom());
			this.setId(other.getId());
		}
	}

	// =================================================================================================================
	// Methods for/from SuperClass/Interface
	// =================================================================================================================
	@Override
	public String toString() {
		return "EntryPoint [" + getId() + "] : " + description ;
	}

	@Override
	public int hashCode() {
		if (hash == null) {
			synchronized (EntryPoint.class) {
				if (hash == null) {
					hash = (id != null ? id : uuid.hashCode());
				}
			}
		}
		return hash;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == this) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!EntryPoint.class.equals(obj.getClass())) {
			return false;
		}
		EntryPoint that = (EntryPoint) obj;
		boolean idcmpr = Objects.equals(this.getId(), that.getId());
		if (idcmpr && this.getId() == null) {
			idcmpr = this.getUuid().equals(that.getUuid());
		}
		return idcmpr && Objects.equals(this.getService(), that.getService())
				&& Objects.equals(this.getDescription(), that.getDescription())
				&& Objects.equals(this.getUserMessage(), that.getUserMessage())
				&& (this.isActive() == that.isActive())
				&& Objects.equals(this.getRoom(), that.getRoom());
	};

	// =================================================================================================================
	// Getter & Setter
	// =================================================================================================================
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Room getRoom() {
		return this.room;
	}

	public void setRoom(Room room) {
		this.room = room;
	}

	public String getService() {
		return this.service;
	}

	public void setService(String service) {
		this.service = service;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getUserMessage() {
		return this.userMessage;
	}

	public void setUserMessage(String userMessage) {
		this.userMessage = userMessage;
	}

	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	public UUID getUuid() {
		return this.uuid;
	}

	// =================================================================================================================
	// Methods
	// =================================================================================================================

	// =================================================================================================================
	// Inner and Anonymous Classes
	// =================================================================================================================
}
