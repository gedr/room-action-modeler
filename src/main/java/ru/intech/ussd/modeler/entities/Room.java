package ru.intech.ussd.modeler.entities;
// default package
// Generated 07.08.2015 14:31:53 by Hibernate Tools 3.4.0.CR1

import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * RoomHeaders generated by hbm2java
 */
@Entity
@Table(schema = "test", name = "rooms")
public class Room implements java.io.Serializable {
	// =================================================================================================================
	// Constants
	// =================================================================================================================
	private static final long serialVersionUID = -6848950585646303318L;

	// =================================================================================================================
	// Fields
	// =================================================================================================================
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq")
	@SequenceGenerator(name = "seq", sequenceName = "test.rooms_id_seq", allocationSize = 1)
	@Column(name = "id")
	private Integer id;

	@Column(name = "dscr")
	private String description;

	@Column(name = "func")
	private String function;

	@Column(name = "finish")
	private boolean finish;

	@Transient
	private int hash;

	@Transient
	private boolean hashActive = false;

	// =================================================================================================================
	// Constructors
	// =================================================================================================================
	public Room() {
	}

	// =================================================================================================================
	// Methods for/from SuperClass/Interface
	// =================================================================================================================
	@Override
	public String toString() {
		return "Room [" + getId() + "] : " + getDescription() + " --> " + getFunction();
	}


	@Override
	public int hashCode() {
		if (!hashActive) {
			synchronized (Room.class) {
				if (!hashActive) {
					hashActive = true;
					hash = (getId() == null ? UUID.randomUUID().hashCode() : getId());
				}
			}
		}
		return hash;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == this) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Room)) {
			return false;
		}
		if (getId() == null) {
			return false;
		}
		return getId().equals(((Room) obj).getId());
	};

	// =================================================================================================================
	// Getter & Setter
	// =================================================================================================================
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getFunction() {
		return function;
	}

	public void setFunction(String function) {
		this.function = function;
	}

	public boolean isFinish() {
		return finish;
	}

	public void setFinish(boolean finish) {
		this.finish = finish;
	}

	// =================================================================================================================
	// Methods
	// =================================================================================================================

	// =================================================================================================================
	// Inner and Anonymous Classes
	// =================================================================================================================

}
